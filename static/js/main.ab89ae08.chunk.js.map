{"version":3,"sources":["components/AddTodoItem.js","components/ClearTodos.js","components/TodoItem.js","components/TodoList.js","components/App.js","index.js"],"names":["AddTodoItem","state","todo","e","this","setState","target","value","preventDefault","props","onFormSubmit","id","Math","ceil","random","text","completed","className","onSubmit","type","onChange","onChangeAddTodoItem","placeholder","Component","ClearTodos","onClear","style","fontSize","padding","textAlign","onClick","getClassName","TodoItem","onComplete","TodoList","todos","todoList","map","key","App","localStorage","setItem","JSON","stringify","parse","getItem","slice","unshift","saveAndPersistTodos","handleFormSumbit","handleTodoCompleted","handleClear","ReactDOM","render","document","querySelector"],"mappings":"oNAEqBA,E,2MAEnBC,MAAQ,CACNC,KAAM,I,mFAGYC,GAClBC,KAAKC,SAAS,CAAEH,KAAMC,EAAEG,OAAOC,U,mCAGpBJ,GACXA,EAAEK,iBACEJ,KAAKH,MAAMC,OAGfE,KAAKK,MAAMC,aAAa,CACtBC,GAAIC,KAAKC,KAAqB,IAAhBD,KAAKE,UACnBC,KAAMX,KAAKH,MAAMC,KACjBc,WAAW,IAEbZ,KAAKC,SAAS,CAACH,KAAM,Q,+BAGb,IAAD,OACP,OACE,0BACEe,UAAU,iBACVC,SAAU,SAACf,GAAD,OAAO,EAAKO,aAAaP,KAEnC,yBAAKc,UAAU,SACb,uBAAGA,UAAU,gBACb,2BACEE,KAAK,OACLC,SAAU,SAACjB,GAAD,OAAO,EAAKkB,oBAAoBlB,IAC1CI,MAAOH,KAAKH,MAAMC,KAClBoB,YAAY,8B,GAnCiBC,aCU1BC,EAVI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACE,uBACER,UAAU,0BACVS,MAAO,CAACC,SAAU,OAAQC,QAAS,OAAQC,UAAW,UACtDC,QAAS,kBAAML,QCQfM,EAAe,SAAC7B,GACpB,OAAQA,EAAKc,UAAa,qBAAuB,aAGpCgB,EAjBE,SAAC,GAAwB,IAAvB9B,EAAsB,EAAtBA,KAAM+B,EAAgB,EAAhBA,WACvB,OACE,yBAAKhB,UAAWc,EAAa7B,IAC3B,0BAAMe,UAAU,mBAAoBf,EAAKa,MACzC,uBACEe,QAAS,kBAAMG,EAAW/B,EAAKS,KAC/BA,GAAG,WACHM,UAAU,2CCNGiB,E,iLACV,MAEuB9B,KAAKK,MAA3B0B,EAFD,EAECA,MAAOF,EAFR,EAEQA,WAETG,EAAWD,EAAME,KAAI,SAAAnC,GAAI,OAAI,kBAAC,EAAD,CAAUoC,IAAKpC,EAAKS,GAAIT,KAAMA,EAAM+B,WAAYA,OACnF,OACE,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,aACZmB,Q,GAT2Bb,aCIjBgB,E,2MAEnBtC,MAAQ,CACNkC,MAAO,CACL,CAACxB,GAAI,EAAGI,KAAM,mCAAoCC,WAAW,GAC7D,CAACL,GAAI,EAAGI,KAAM,uBAAwBC,WAAW,GACjD,CAACL,GAAI,EAAGI,KAAM,2BAA8BC,WAAW,K,mFAIvCmB,GAClB/B,KAAKC,SAAS,CAAC8B,UAMfK,aAAaC,QAAQ,QAASC,KAAKC,UAAUR,M,0CAI7C,IAAMA,EAAQO,KAAKE,MAAMJ,aAAaK,QAAQ,UAE1CV,GACF/B,KAAKC,SAAS,CAAC8B,Y,uCAIFjC,GACf,IAAMiC,EAAQ/B,KAAKH,MAAMkC,MAAMW,QAC/BX,EAAMY,QAAQ7C,GACdE,KAAK4C,oBAAoBb,K,0CAGPxB,GAClB,IAAMwB,EAAQ/B,KAAKH,MAAMkC,MAAME,KAAI,SAAAnC,GAIjC,OAHIA,EAAKS,KAAOA,IACdT,EAAKc,WAAad,EAAKc,WAElBd,KAGTE,KAAK4C,oBAAoBb,K,oCAIzB/B,KAAK4C,oBAAoB,M,+BAGjB,IAAD,OACP,OACE,yBAAK/B,UAAU,aACb,wBAAIA,UAAU,SAAd,qBACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAaP,aAAc,SAACR,GAAD,OAAU,EAAK+C,iBAAiB/C,MAC3D,kBAAC,EAAD,CAAUiC,MAAO/B,KAAKH,MAAMkC,MAAOF,WAAY,SAACtB,GAAD,OAAQ,EAAKuC,oBAAoBvC,MAChF,kBAAC,EAAD,CAAYc,QAAS,kBAAM,EAAK0B,uB,GAxDT5B,aCDjC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.ab89ae08.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class AddTodoItem extends Component {\n\n  state = {\n    todo: '',\n  }\n\n  onChangeAddTodoItem(e) {\n    this.setState({ todo: e.target.value });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    if(!this.state.todo) {\n      return\n    }\n    this.props.onFormSubmit({\n      id: Math.ceil(Math.random() * 10000),\n      text: this.state.todo,\n      completed: false,\n    });\n    this.setState({todo: ''});\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container\"\n        onSubmit={(e) => this.onFormSubmit(e)}\n      >\n        <div className=\"field\">\n          <i className=\"fas fa-edit\"></i>\n          <input\n            type=\"text\"\n            onChange={(e) => this.onChangeAddTodoItem(e)}\n            value={this.state.todo}\n            placeholder=\"Add some tasks. . .\"\n          />\n        </div>\n      </form>\n    );\n  }\n}","import React from 'react';\n\nconst ClearTodos = ({onClear}) => {\n  return (\n    <i\n      className=\"delete far fa-trash-alt\"\n      style={{fontSize: '30px', padding: '10px', textAlign: 'center'}}\n      onClick={() => onClear()}\n    />\n  );\n};\n\nexport default ClearTodos;","import React from 'react';\n\nconst TodoItem = ({todo, onComplete}) => {\n  return (\n    <div className={getClassName(todo)}>\n      <span className=\"todo-item__text\">{ todo.text }</span>\n      <i\n        onClick={() => onComplete(todo.id)}\n        id=\"complete\"\n        className=\"todo-item__check far fa-check-circle\"\n      />\n    </div>\n  );\n};\n\nconst getClassName = (todo) => {\n  return (todo.completed) ? 'todo-item complete' : 'todo-item';\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nexport default class TodoList extends Component {\n  render() {\n    // console.log(this.props);\n    const { todos, onComplete } = this.props;\n    // const todoList = todos.map((todo) => <TodoItem todo={todo}/>);\n    const todoList = todos.map(todo => <TodoItem key={todo.id} todo={todo} onComplete={onComplete} />)\n    return (\n      <div className=\"todo-body\">\n        <div className=\"todo-list\">\n          {todoList}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nimport AddTodoItem from './AddTodoItem';\nimport ClearTodos from './ClearTodos';\nimport TodoList from './TodoList';\n\n\nexport default class App extends Component {\n\n  state = {\n    todos: [\n      {id: 1, text: 'Hello there! Thanks for visiting', completed: false},\n      {id: 2, text: 'Click the trash icon', completed: false},\n      {id: 3, text: 'Don\\'t mind me, I\\'m done.', completed: true},\n    ],\n  }\n\n  saveAndPersistTodos(todos) {\n    this.setState({todos});\n    /*\n      The reason why I passed `todos` instead of `this.state.todos`\n      to JSON.stringify is because setState isn't guaranteed to update ASAP!\n      https://reactjs.org/docs/react-component.html#setstate\n    */ \n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  componentDidMount() {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n\n    if (todos) {\n      this.setState({todos});\n    }\n  }\n\n  handleFormSumbit(todo) {\n    const todos = this.state.todos.slice();\n    todos.unshift(todo);\n    this.saveAndPersistTodos(todos);\n  }\n\n  handleTodoCompleted(id) {\n    const todos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n\n    this.saveAndPersistTodos(todos);\n  }\n\n  handleClear() {\n    this.saveAndPersistTodos([]);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Jinyuz Taskinator</h1>\n        <div className=\"app-container\">\n          <AddTodoItem onFormSubmit={(todo) => this.handleFormSumbit(todo)} />\n          <TodoList todos={this.state.todos} onComplete={(id) => this.handleTodoCompleted(id)}/>\n          <ClearTodos onClear={() => this.handleClear() } />\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)"],"sourceRoot":""}